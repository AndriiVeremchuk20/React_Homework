{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Documents/nix_react/todo_app_redux/src/Components/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { TASK_STATUS } from \"../types/todoTypes\";\nimport { TodoCard } from \"./TodoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n\n  const todoList = useTypedSelector(state => state.todo.filter(todoItem => {\n    if (state.filter === \"open\") {\n      return todoItem.status === TASK_STATUS.Open;\n    } else if (state.filter === \"in-progress\") {\n      return todoItem.status === TASK_STATUS.inProgress;\n    } else if (state.filter === \"done\") {\n      return todoItem.status === TASK_STATUS.Done;\n    } else {\n      return true;\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex flex-wrap justify-center my-20\",\n    children: todoList.map(item => /*#__PURE__*/_jsxDEV(TodoCard, {\n      task: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"7BYNwWBbBjNaovQ6GDVNGxx4iik=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useTypedSelector","TASK_STATUS","TodoCard","TodoList","todoList","state","todo","filter","todoItem","status","Open","inProgress","Done","map","item","id"],"sources":["/home/andrei/Documents/nix_react/todo_app_redux/src/Components/TodoList.tsx"],"sourcesContent":["import React from \"react\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { Itodo, TASK_STATUS } from \"../types/todoTypes\";\nimport { TodoCard } from \"./TodoCard\";\n\nexport const TodoList: React.FC = () => {\n  const todoList = useTypedSelector((state) =>\n    state.todo.filter((todoItem) => {\n      if (state.filter === \"open\") {\n        return todoItem.status === TASK_STATUS.Open;\n      } else if (state.filter === \"in-progress\") {\n        return todoItem.status === TASK_STATUS.inProgress;\n      } else if (state.filter === \"done\") {\n        return todoItem.status === TASK_STATUS.Done;\n      } else {\n        return true;\n      }\n    })\n  );\n\n  return (\n    <div className=\"w-full flex flex-wrap justify-center my-20\">\n      {todoList.map((item: Itodo) => (\n        <TodoCard key={item.id} task={item} />\n      ))}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAAgBC,WAAhB,QAAmC,oBAAnC;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,MAAMC,QAAkB,GAAG,MAAM;EAAA;;EACtC,MAAMC,QAAQ,GAAGJ,gBAAgB,CAAEK,KAAD,IAChCA,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAmBC,QAAD,IAAc;IAC9B,IAAIH,KAAK,CAACE,MAAN,KAAiB,MAArB,EAA6B;MAC3B,OAAOC,QAAQ,CAACC,MAAT,KAAoBR,WAAW,CAACS,IAAvC;IACD,CAFD,MAEO,IAAIL,KAAK,CAACE,MAAN,KAAiB,aAArB,EAAoC;MACzC,OAAOC,QAAQ,CAACC,MAAT,KAAoBR,WAAW,CAACU,UAAvC;IACD,CAFM,MAEA,IAAIN,KAAK,CAACE,MAAN,KAAiB,MAArB,EAA6B;MAClC,OAAOC,QAAQ,CAACC,MAAT,KAAoBR,WAAW,CAACW,IAAvC;IACD,CAFM,MAEA;MACL,OAAO,IAAP;IACD;EACF,CAVD,CAD+B,CAAjC;EAcA,oBACE;IAAK,SAAS,EAAC,4CAAf;IAAA,UACGR,QAAQ,CAACS,GAAT,CAAcC,IAAD,iBACZ,QAAC,QAAD;MAAwB,IAAI,EAAEA;IAA9B,GAAeA,IAAI,CAACC,EAApB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAtBM;;GAAMZ,Q;UACMH,gB;;;KADNG,Q"},"metadata":{},"sourceType":"module"}